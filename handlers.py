from aiogram.types import Message
from aiogram.dispatcher.filters import CommandStart
from keyboards import transition_menu
from state import Game
from load_all import dp

number_stage = 1
# admin_id = 382505606
admin_id = 428388372


@dp.message_handler(user_id=admin_id, commands=["stage"])
async def count_user(message: Message):
    await message.answer(f'–ê–Ω—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ {number_stage} —ç—Ç–∞–ø–µ')


@dp.message_handler(state=Game.transition)
async def transition(message: Message):
    global number_stage
    await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é. –ù–∞–∂–º–∏, –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤–∞', reply_markup=transition_menu)
    if number_stage == 2:
        await Game.pre_stage2.set()
    elif number_stage == 3:
        await Game.pre_stage3.set()
    elif number_stage == 4:
        await Game.pre_stage4.set()
    elif number_stage == 5:
        await Game.pre_stage5.set()
    elif number_stage == 6:
        await Game.pre_stage6.set()
    elif number_stage == 7:
        await Game.pre_stage7.set()


@dp.message_handler(CommandStart())
async def start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –∫–≤–µ—Å—Ç! *** —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–æ—Ç–æ–º ***.\n–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã: –ø—Ä–∏—Ö–æ–¥–∏—Ç –∑–∞–≥–∞–¥–∫–∞, '
                         '–≤ –æ—Ç–≤–µ—Ç –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ—Å—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω–∞ –æ–ø–∏—Å—ã–≤–∞–µ—Ç.')
    await message.answer('–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤–∞, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É', reply_markup=transition_menu)
    await Game.pre_stage1.set()


@dp.message_handler(state=Game.pre_stage1)
async def pre_stage1(message: Message):
    await message.answer('–ü–µ—Ä–≤–∞—è –∑–∞–≥–∞–¥–∫–∞:\n–ú–µ—Å—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–¥–∞—Ä–∏–ª–æ —Ç–µ–±–µ –Ω–∞—Å')
    await Game.stage1.set()


@dp.message_handler(state=Game.stage1)
async def stage1(message: Message):
    global number_stage
    if message.text.lower() != '—à–∫–æ–ª–∞':
        await message.answer('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–µ–Ω')
        await Game.stage1.set()
    else:
        number_stage += 1
        await Game.transition.set()


@dp.message_handler(state=Game.pre_stage2)
async def pre_stage2(message: Message):
    await message.answer('–ú–µ—Å—Ç–æ –Ω–∞—à–µ–π —à–∞–ª—å–Ω–æ–π –º–æ–ª–æ–¥–æ—Å—Ç–∏, –≥–¥–µ –º—ã –ø—Ä—è—Ç–∞–ª–∏—Å—å –≤ –∫—É—Å—Ç–∞—Ö –∏ —É–±–µ–≥–∞–ª–∏ –æ—Ç –ª–∏—à–Ω–∏—Ö –≥–ª–∞–∑')
    await Game.stage2.set()


@dp.message_handler(state=Game.stage2)
async def stage2(message: Message):
    global number_stage
    if message.text.lower() != "–º–æ—Å—Ç —É —Ç—Ä—É–¥–∞":
        await message.answer('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–µ–Ω')
        await Game.stage2.set()
    else:
        number_stage += 1
        await Game.transition.set()


@dp.message_handler(state=Game.pre_stage3)
async def pre_stage3(message: Message):
    await message.answer('–ú–µ—Å—Ç–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –ª—é–¥–∏ –≤–ª—é–±–ª—è—é—Ç—Å—è –≤ –Ω–∞—à –≥–æ—Ä–æ–¥ –¥–≤—É—Ö N')
    await Game.stage3.set()


@dp.message_handler(state=Game.stage3)
async def stage3(message: Message):
    global number_stage
    if message.text.lower() != "–ø–∞–º—è—Ç–Ω–∏–∫ –ß–∫–∞–ª–æ–≤—É":
        await message.answer('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–µ–Ω')
        await Game.stage3.set()
    else:
        number_stage += 1
        await Game.transition.set()


@dp.message_handler(state=Game.pre_stage4)
async def pre_stage4(message: Message):
    await message.answer('Un pezzo di Italia a Ni≈ænij Novgorod')
    await Game.stage4.set()


@dp.message_handler(state=Game.stage4)
async def stage4(message: Message):
    global number_stage
    if message.text.lower() != "–ø–∞–ø–∏":
        await message.answer('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–µ–Ω')
        await Game.stage4.set()
    else:
        number_stage += 1
        await Game.transition.set()


@dp.message_handler(state=Game.pre_stage5)
async def pre_stage5(message: Message):
    await message.answer('–ú–µ—Å—Ç–æ, –≥–¥–µ —Ç–≤–æ—è –ø–æ–ø–∫–∞ –ø—Ä–∏–≤–ª–µ–∫–∞–ª–∞ –≤–∑–≥–ª—è–¥—ã –º—É–∂—á–∏–Ω')
    await Game.stage5.set()


@dp.message_handler(state=Game.stage5)
async def stage5(message: Message):
    global number_stage
    if message.text.lower() != "—Ä–µ–∂–∏–º":
        await message.answer('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–µ–Ω')
        await Game.stage5.set()
    else:
        number_stage += 1
        await Game.transition.set()


@dp.message_handler(state=Game.pre_stage6)
async def pre_stage6(message: Message):
    await message.answer('–ú–µ—Å—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–≤–µ–ª–æ —Ç–≤–æ—é –∂–∏–∑–Ω—å –Ω–∞ –Ω–æ–≤—ã–π —ç—Ç–∞–ø')
    await Game.stage6.set()


@dp.message_handler(state=Game.stage6)
async def stage6(message: Message):
    global number_stage
    if message.text.lower() != "–ø–∞–∫–≥–∞—É–∑—ã":
        await message.answer('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–µ–Ω')
        await Game.stage6.set()
    else:
        number_stage += 1
        await Game.transition.set()


@dp.message_handler(state=Game.pre_stage7)
async def pre_stage7(message: Message):
    await message.answer('–§–∏–Ω–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞, –≥–¥–µ —Ç–µ–±—è –∂–¥–µ—Ç —Å—é—Ä–ø—Ä–∏–∑. –ó–∞–≤—è–∂–∏ –≥–ª–∞–∑–∞ üëÄ')
    await Game.stage7.set()


@dp.message_handler(state=Game.stage7)
async def stage7(message: Message):
    global number_stage
    if message.text.lower() != "–∫–∞—Ñ–µ –æ–ø–µ—Ä–∞":
        await message.answer('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–µ–Ω')
        await Game.stage7.set()
    else:
        await Game.end.set()
